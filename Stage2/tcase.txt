declare module mod1;
declare module mod2;

<<module mod1>>
takes input [a: integer, b: integer];
returns [x:integer, abc:real];
start
    declare a:integer;
    declare c: real;
    a := 10;
    c:=10.4;
    declare n,k: integer;
    [a,abc] := use module mod2 with parameters a, b;
    for(k in 1..10)
    start
        n := a;
    end
    get_value(x);
end

<<<driver program>>>
start
    declare num, a, k:integer;
    declare r:real;
    declare flag: boolean;
    num := -(k-a*a+k);
    switch(flag)
    start
    	case false:
                    print(100);
    				break;
    	case true: [num,r]:=use module mod1 with parameters a, k;
                    break;
    end
end

<<module mod2>>
takes input [a: integer, b: integer]; 
returns [x: integer, abc: real]; 
start
    declare B:array [1..10] of integer;
    declare C:array [1..10] of integer;
    declare b1,b2:boolean;
    x := x - C[2];
    B := C;
    B[x] := x;
    B[3] := C[4] + 3;
    while(b<a)
    start
        a := 10;
    end
    abc := 2.0;
end